{"version":3,"sources":["Component/news/news-item.jsx","Component/news/news.jsx","Component/boximg/boximg.jsx","Header/Header.jsx","Component/nav/nav.jsx","App.js","Component/product/product.jsx","Component/content/contents.jsx","Component/Pagination/Pagination.jsx","Component/infobar/infobar.jsx","Component/select/select.jsx","Component/content/content.jsx","index.js"],"names":["NewsItem","props","name","data","sale","bonus","number","keys","date","summ","adr","plus","href","className","News","new_soon","new_recently","map","post","index","key","id","addr","Boximg","awards_img","awards_name","src","alt","Header","money","moneybalans","bonusbalans","moneybonus","collection_to","collection_max","tasks_to","tasks_max","awards_all","item","length","Nav","App","state","fetch","then","response","json","setState","header","console","log","this","React","Component","Prod","count","Pl","Function","prototype","MoDorate","product","size","onClick","price","Contents","useState","detail","isActive","setIsActive","products_list","setCount","i","setProduct_summ","summ_order","setSumm_order","productshow","setProductshow","setMoDorate","Ps","ite","newItem","rate_bonus","person_discount","discount_poll","rate_delivery","toFixed","stile","style_form","block_content","types","wrapper","order","dates","coming_bonus","data_account","tel","dats","tims","before","withs","payment_methods","comment","withing","split","befores","product_summs","summ_orders","typeof","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","style","marginLeft","ItemId","newOrder","el","newcount","setTimeout","Pagination","postPerPage","totalPost","paginete","currentPage","pageNumbers","all_page","Math","ceil","push","Infobar","marginTop","fontWeight","backgroundColor","Selecting","name_adr","onChange","ul","setUl","setData","data_time","time","setTime","ul_list_on","all_adr","years","month","prochie","all_time","li_data","e","target","textContent","paddingLeft","Content","account","list_content","select_oper","isActivyears","date1","Date","startDate","sbros","document","querySelector","clickselect0","dop2","clickselect1","filter","a","getFullYear","getMonth","getDate","clickselect2","pageNumber","addr_account","orders","error","false","finally","detail_click","sort","b","wt","IndexofLastPost","IndexofFirstPost","currentPost","slice","marginRight","selected","showYearPicker","dateFormat","yearItemNumber","showMonthYearPicker","showFullMonthYearPicker","fontSize","rate","date_delivery","interval_delivery","summ_bonus","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64df854e.chunk.js","sourcesContent":["import React from \"react\"\n\n\nexport default function NewsItem(props) {\n\n    const { name, data, sale, bonus, number, keys, date, summ, adr, plus } = props;\n    // вывод значений взависимости от принятых данных\n    return (\n        <div>\n            {keys === \"adjustment\" ?\n                (<>{name}\n                    <a href=\"#dw\"> {data}</a>\n                    {sale && (<><span className=\"bold\"> скидка &#43;{sale}</span></>)}\n                    {(bonus && (<><span className=\"bonus\"> {!plus && (<>&#43;</>)}{bonus} &#x263B;</span> </>))}\n                    {number && (<> &#8470;{number}</>)}</>)\n                :\n                (<>{name} {number && (<> &#8470;{number} </>)}\n                    <a href=\"#dw\">{data}\n                        {date && (date + (\" на \"))}\n                        {summ && (<> {summ} &#8381; </>)}\n                        {adr && (<>по адресу &laquo;{adr}&raquo;</>)}</a>\n                    {sale && (<><span className=\"bold\"> скидка &#43;{sale}</span></>)}\n                    {(bonus && (<><span className=\"bonus\"> {!plus && (<>&#43;</>)}{bonus}&#x263B;</span> </>))} </>)}\n        </div>\n    )\n}\n\n","\nimport NewsItem from \"./news-item\";\nimport \"./new.css\";\nimport React from \"react\";\n\n\nexport default function News(props) {\n    const { new_soon, new_recently } = props;\n    return (\n        <div className=\"newItem\">\n            <div className=\"Items\">\n                <span className=\"itemshead\">Скоро</span>\n                {\n                    //перебор массива в передачей данных дочернему элементу\n                    new_soon.map((post, index) => (\n                        index < 4 && (<NewsItem\n                            key={post.id+\"ad\"}\n                            keys={post.key}\n                            name={post.name}\n                            data={post.data}\n                            sale={post.sale}\n                            bonus={post.bonus} />\n                        )\n                    ))\n                }\n            </div>\n            <div className=\"Items border\">\n                <span className=\"itemshead\">Недавно</span>\n                {\n                    new_recently.map((post, index) => (\n                        index < 4 && (<NewsItem\n                            plus={true}\n                            key={post.id+\"qw\"}\n                            date={post.date}\n                            keys={post.key}\n                            name={post.name}\n                            data={post.data}\n                            sale={post.sale}\n                            bonus={post.bonus}\n                            number={post.number}\n                            adr={post.addr}\n                            summ={post.summ} />\n                        )\n                    ))\n                }\n            </div>\n\n\n        </div>\n\n    )\n}","import React from \"react\"\n\n// Элемент изоображения награды\nexport default function Boximg(props) {\n    const {awards_img, awards_name} = props;\n\n    return (\n        <div className=\"boximg\" key={awards_name}>\n            <img className=\"img\" src={awards_img} alt={awards_name} />\n        </div>\n    )\n}\n","import \"./Header.css\";\nimport \"../App\";\nimport Boximg from \"../Component/boximg/boximg.jsx\";\nimport React from \"react\"\n\n\nfunction Header(props) {\n// присваивание значений переданных от родительского элемента\n    const { moneybalans, bonusbalans, moneybonus, sale, collection_to, collection_max, tasks_to, tasks_max } = props.money;\n    const { awards_all } = props;\n    return (\n        <div className=\"head\">\n            <span className=\"item-head-01\">Личный кабинет</span>\n            <div className=\"wrapper-head\">\n                <div className=\"item-head-02\">\n                    <div>\n                        <div>На&nbsp;вышем&nbsp;счёте</div>\n                        <div><span className=\"fontsize\">{moneybalans}&#8381;</span>&nbsp;и&nbsp;<span className=\"colorbonus\"><span className=\"fontsize\">{bonusbalans}Б</span>&nbsp;баллов</span></div>\n                    </div>\n                    <div>\n                        <div>скидка</div>\n                        <div><span className=\"fontsize\">{sale}%</span></div>\n                    </div>\n                </div>\n                <div className=\"item-head-03\">\n                    сэкономлено&nbsp;баллами\n                    <div>\n                        <span className=\"fontsize\">{moneybonus}&#8381;</span>\n                    </div>\n                </div>\n                <div className=\"item-head-04\">\n                    в&nbsp;коллекции\n                    <div>\n                        <span className=\"fontsize\">{collection_to}</span>&nbsp;из&nbsp;<span className=\"fontsize\">{collection_max}</span>&nbsp;<span className=\"fontdecor\">рецептов</span>\n                    </div>\n                </div>\n                <div className=\"item-head-05\">\n                    выполнено\n                    <div>\n                        <span className=\"fontsize\">{tasks_to}</span>&nbsp;из&nbsp;<span className=\"fontsize\">{tasks_max}</span>&nbsp;<span className=\"fontdecor\">заданий</span>\n                    </div>\n                </div>\n                <div className=\"item-head-06\">\n                    {\n                        awards_all.map((item, index) => (\n                            (index < 3) && <Boximg key={index} awards_img={item.awards_img} awards_name={item.awards_name} />\n                        ))\n                    }\n                    <div>\n                        и &nbsp;ещё\n                        <div className=\"fontsize\">{awards_all.length}&nbsp;награды</div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Header;","import \"./nav.css\"\n\nexport default function Nav() {\n    // элемент навигации\n    return (\n        <div className=\"navigation\">\n            <div className=\"item activ\"><a href=\"#2\">Сводка</a></div>\n            <div className=\"item\"><a href=\"#1\">Задания</a><sub>20</sub></div>\n            <div className=\"item\"><a href=\"#3\">Детализация</a></div>\n            <div className=\"item\"><a href=\"#4\">Избранное</a><sub>3</sub></div>\n            <div className=\"item\"><a href=\"#5\">Ваши&nbsp;рецепты</a><sub>9</sub></div>\n            <div className=\"item\"><a href=\"#6\">Адреса&nbsp;доставки</a><sub>4</sub></div>\n            <div className=\"item\"><a href=\"#7\">Профиль&nbsp;и&nbsp;напоминание</a></div>\n        </div>\n    )\n}","import React from 'react';\nimport News from \"./Component//news/news\";\nimport Header from \"./Header/Header.jsx\";\nimport Nav from \"./Component/nav/nav.jsx\";\n\nexport default class App extends React.Component {\n  state = {\n    new_soon: [],\n    new_recently: [],\n    money: [],\n    awards_all: []\n  };\n\n  componentDidMount() { //загрузка данных из базы при первой загрузке страницы\n    fetch(\"orders.json\")\n      .then((response) => response.json()) // конвертируем данные из json формата\n      .then((response) => this.setState({ // записываем полученные данные\n        new_soon: response.new_soon,\n        new_recently: response.new_recently,\n        awards_all: response.awards_all,\n        money: response.header\n      }))\n  }\n\n  render() {\n    console.log(this.state.awards_all)\n    return ( \n      <div >\n      <Header awards_all={this.state.awards_all} money={this.state.money}/> \n      <Nav />\n      <News new_soon={this.state.new_soon} new_recently={this.state.new_recently}/ >\n      </div>\n    );\n  }\n}","import React from \"react\"\n// вывод элемента продукта в заказе\nfunction Prod(props) {\n        const { count, Pl = Function.prototype, MoDorate } = props;\n\n        return (\n                count.map((item, index) => (<>\n                        <div className=\"item_prod\">{item.product}</div>\n                        <div>{item.size}</div>\n                        <i className=\"plus_add\" onClick={() => { Pl(item.id);}}>+</i>\n                        <div className=\"rate-style-1\">{item.price} &#8381;</div>\n                        <div className={MoDorate}>x {item.count}</div>\n                        <div>=</div>\n                        <div className={MoDorate + \" rate-style-1\"}>{item.count * item.price} &#8381;</div>\n                </>))\n        );\n\n}\n\nexport default Prod;","import React, { useState } from 'react';\nimport Prod from \"../product/product.jsx\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\" // Подключение состояния анимации Реакт\n\nimport \"./RCSSRG.css\"\n\n\nfunction Contents(props) {\n    const [isActive, setIsActive] = useState(props.detail);\n    const [count, setCount] = useState(props.products_list);\n    const [product_summ, setProduct_summ] = useState(props.products_list.map(i => i.price * i.count)); // запись суммы продуктов для каждого заказа\n    const [summ_order, setSumm_order] = useState();\n    const [productshow, setProductshow] = useState(false);\n    const [MoDorate, setMoDorate] = useState(\"\");\n\n\n    const Ps = (ite) => { // расчет суммы продуктов по умолчанию или при изменении \n        let newItem = 0;\n        if (ite) {\n            ite.map(i =>\n                newItem += i.price * i.count\n            );\n        } else {\n            count.map(i =>\n                newItem += i.price * i.count\n            );\n        }\n        setProduct_summ(newItem);\n        // Формула расчета общей суммы заказа \n        setSumm_order(\n            (\n                (newItem - ((rate_bonus) ? rate_bonus : 0)) - ((newItem - ((rate_bonus) ? rate_bonus : 0))\n                    * (person_discount + discount_poll) / 100)\n                + rate_delivery).toFixed()\n        )\n    }\n    // стили\n    let stile = \"accordion-content\",\n        style_form = \"form-content\",\n        block_content = \"block-content\",\n        types = \"text\",\n        wrapper = \"head-wrapper-cont\";\n    if (isActive) {\n        stile += \" active\";\n        block_content += \" actives\"\n        wrapper += \" wrapper-content\"\n    }\n    // состояния открытия или скрытия окна продуктов в заказе \n    const products = () => {\n        if (!productshow) {\n            setProductshow(true);\n        } else {\n\n            setProductshow(false);\n        }\n    }\n    // анамация затухания и всплытия при изменении количества продуктов и их суммы\n    // пересчет общей суммы от числа продуктов\n    const Pl = (ItemId) => {\n        const newOrder = count.map(el => {\n            if (el.id === ItemId) {\n                const newcount = el.count + 1;\n                setMoDorate(\"show_rate \");\n                setTimeout(() => setMoDorate(\"\"), 500)\n                return {\n                    ...el,\n                    count: newcount\n                };\n            } else return el;\n        })\n        setCount(newOrder);\n        Ps(newOrder);\n    }\n    //состояние открытие окна заказов\n    if (!isActive || !props.detail) {\n        types = \"buttom\";\n        style_form += \" hover\";\n    }\n    // назначение имен пропсов\n    const { order,\n        dates,\n        coming_bonus,\n        data_account,\n        tel,\n        dats,\n        tims,\n        person_discount,\n        rate_bonus,\n        name,\n        addr,\n        before,\n        withs,\n        discount_poll,\n        rate_delivery,\n        payment_methods,\n        comment\n    } = props;\n    // повторный расчет суммы заказа для заголовка заказа\n    let withing = withs.split(\":\");\n    let befores = before.split(\":\");\n    let product_summs = 0;\n    props.products_list.map(i => product_summs += i.price * i.count);\n    let summ_orders = ((product_summs - ((rate_bonus) ? rate_bonus : 0)) - ((product_summs - ((rate_bonus) ? rate_bonus : 0)) * (person_discount + discount_poll) / 100) + rate_delivery).toFixed();\n    return (\n\n        <div typeof={types} key={props.key} className={wrapper} >\n            {/* создание тумблера для переключения содержимого контента заказов */}\n            <span className={style_form} onClick={() => { setIsActive(!isActive); Ps(); }}>\n                <div className=\"accordion-titel\" >\n                    <div className={stile}>\n                        {!isActive && (<>&#9655;</>)}\n                    </div>\n                </div>\n\n                <><span>{order}</span>\n                    <span>{dates}</span>\n                    <span className=\"rate-bonus-style\">{coming_bonus && (<>{coming_bonus}&#x263B;</>)}</span>\n                    <div>\n                        <div className=\"rate-style\">-{summ_order > 0 ? summ_order : summ_orders} &#8381;</div>\n                        {rate_bonus && (<div className=\"rate-bonus-style rate-bonus-left\">-{rate_bonus}&#x263B;</div>)}\n                    </div>\n                    <span>{name}:&nbsp;{addr}</span></>\n            </span>\n            <ReactCSSTransitionGroup\n                transitionName=\"fade\"\n                transitionEnterTimeout={500}\n                transitionLeaveTimeout={500}\n                transitionAppear={true}\n                transitionAppearTimeout={500}>\n                {(isActive) && (\n                    <div className={block_content} style={{ marginLeft: \"1vw\" }}>\n\n                        <div>Данные получателя</div>\n                        <div>{data_account}</div>\n                        <div>Телефон</div>\n                        <div>{tel.map((item, index) => ((!tel.length == index) ? (<div className=\"tel\">{item}</div>) : (<div>{item}</div>)))}</div>\n                        <div>Дата доставка</div>\n                        <div>{dats}&nbsp;{tims}</div>\n                        <div>Интервал доставки</div>\n                        <div>{withing[0]}<span className=\"up\">{withing[1]}</span> &#8212;{befores[0]}<span className=\"up\">{befores[1]}</span></div>\n                        <div>Комментарий</div>\n                        <div>{comment.map(item => (<div>{item}</div>))}</div>\n                        <div>Способы оплаты</div>\n                        <div>{payment_methods}</div>\n                        <div className=\"item_prods\" onClick={() => products()}>Список товаров</div>\n                        <div></div>\n                        <ReactCSSTransitionGroup\n                            transitionName=\"fade\"\n                            transitionEnterTimeout={500}\n                            transitionLeaveTimeout={500}\n                            transitionAppear={true}\n                            transitionAppearTimeout={500}>\n                            {productshow && (\n                                <>\n                                    <div className=\"product-content\">\n                                        {\n                                            <Prod key={count.id + \"sd\"} count={count} MoDorate={MoDorate} Pl={Pl} />\n                                        }\n                                    </div>\n\n                                </>\n                            )}\n                        </ReactCSSTransitionGroup>\n                        <div></div>\n                        <div>Стоимость продуктов</div>\n                        <div className={MoDorate + \"size1_1\"}>{product_summs} &#8381;</div>\n                        <div>Оплачено балами</div>\n                        <div className=\"rate-bonus size1_1\">{rate_bonus ? (<>{rate_bonus}&#x263B;</>) : 0}</div>\n                        <div>Персональная скидка</div>\n                        <div className=\"size1_2\">{person_discount} %</div>\n                        <div>Скидка за опросник</div>\n                        <div className=\"size1_2\">{discount_poll} %</div>\n                        <div>Стоимость доставки</div>\n                        <div className=\"size1_2\">{rate_delivery} &#8381;</div>\n                        <div className=\"pluss2\">Повторить весь заказ</div>\n                        <div className=\"size1_4_bold\"><div className={MoDorate + \"pluss1\"}>{summ_orders} &#8381;</div> <div className=\"plus_add plus_add_1\">+</div> <div className=\"povtororder fontdecor\">Повторить весь заказ</div></div>\n                        <div>Бонус балов за заказ</div>\n                        <div className=\"rate-bonus size1_1\">{coming_bonus ? (<>{coming_bonus}&#x263B;</>) : 0}</div>\n                    </div>\n\n                )\n                }\n            </ReactCSSTransitionGroup>\n        </div >\n    );\n\n}\n\nexport default Contents;","import React from \"react\";\nimport \"./Pagination.css\"\n\n// Создание Пагинации данных заказов\n// Прописываем получаемые значения за место props-ов\nexport default function Pagination({ postPerPage, totalPost, paginete, currentPage }) {\n    const pageNumbers = [];\n    const all_page = Math.ceil(totalPost / postPerPage); // расчет количества страниц\n    for (let i = 1; i <= all_page; i++) {\n        // создает массив с нумерацией страниц добавляя последующее число в конец массива\n        pageNumbers.push(i);\n    }\n\n    return (\n        <div>\n            <ul className=\"pagination\">\n                <li\n                    onClick={() => paginete(currentPage - 1)} //перелистывает назад\n                    //если открыта 1 страница то кнопка назад откл\n                    className={(currentPage == 1) ? \"disabled\" : \"page-next_prev\"}> \n                    &#10229;\n                     <span>предыдущая</span>\n                </li>\n                <li\n                    onClick={() => paginete(currentPage + 1)} // перелистывает вперед\n                    //если открыта последняя страница то кнопка вперед откл\n                    className={(currentPage === all_page) ? \"disabled\" : \"page-next_prev\"}>\n                    <span>следующая</span>\n                    &#10230;\n                </li>\n                {\n                    //вывод нумерации страниц\n                    pageNumbers.map(i => (\n                        <li\n                            key={i + \"as\"}\n                            // при клике присваиват еласс активного элемента\n                            className={(currentPage == i) ? \"page-item active\" : \"page-item\"}>\n                            <span\n                                onClick={() => paginete(i)} //получает значение страницы кликнутого элемента\n                                // href={\"page-\"+i}\n                                className=\"page-link\">\n                                {i}\n                            </span>\n                        </li>\n                    ))}\n            </ul>\n        </div>\n\n    )\n\n\n}","\n\nconst Infobar = () => {\n    // вывод информационного бара\n    return (<>\n        <div className=\"infobar\">Способы накопить баллы\n            <p >Заказывать много: <br /> 7&divide;13&nbsp;товаров&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span className=\"arrow\"><span className=\"arrow-1\"></span></span> <span className=\"rate-bonus\">50 &#x263B;</span>\n                <br />\n                14&divide;120&nbsp;товаров&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span className=\"arrow\"><span className=\"arrow-1\"></span></span><span className=\"rate-bonus\">100 &#x263B;</span>\n                <br />\n                21 и больше&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span className=\"arrow\"><span className=\"arrow-1\"></span></span><span className=\"rate-bonus\">200 &#x263B;</span>\n            </p>\n            <p>\n                <a href=\"!#\">Выполнять задания</a>\n            </p>\n            <p>\n                Полкупать<a href=\"!#\"> специальные продукты</a>\n            </p>\n            <p style={{ marginTop: \"3vw\", fontWeight: \"700\" }}>\n                Правила\n                </p>\n            <p>\n                Баллы появляются на балансе не сразу, а в день фактического выполнения заказа.\n                </p>\n            <p>\n                Ограничения по использованию баллов: <span style={{ fontWeight: \"700\" }}>15% от суммы заказа</span>\n            </p>\n            <p>\n                Через 3 месяца после зачисления баллы сгорают\n                </p>\n\n            <p style={{ marginTop: \"3vw\", fontWeight: \"700\" }}>\n                Совет\n                </p>\n            <p>\n                добавляйте полюбившиеся товары в <a href=\"!#\">Избранное</a>, чтобы иметь к ним быстрый доступ\n                </p>\n            <p style={{ marginTop: \"3vw\" }}>\n                Возле каждого товара вы видите  <span style={{ backgroundColor: \"#ccda16\" }}>сколько</span> человек добавили его в избранное\n                </p>\n        </div>\n        \n    </>\n    )\n}\n\nexport default Infobar","import \"./select.css\"\nimport React, { useState } from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\"\n\n\nfunction Selecting({ name_adr, onChange = Function.prototype }, props) {\n    //создание состояний изменяемых элементов (для рендеринга значений)\n    const [ul, setUl] = useState(false),\n        [data, setData] = useState(props.data ? props.data : \"Все адреса\"),\n        [time, setTime] = useState(props.data_time ? props.data_time : \"за все время\"),\n        ul_list_on = () => {\n            setUl(!ul) // при клике всплавыющий список\n        },\n        //присвоений значений констант (не обязательные поля)\n        all_adr = \"Все адреса\",\n        years = \"за год\",\n        month = \"за месяц\",\n        prochie = \"Прочие адреса\",\n        all_time = \"за все время\",\n    \n        li_data = (e) => { // функция призвоения значения родителю дочерних элементов всплывающнго списка\n            if (e.target.textContent != all_adr) { // если событе клика по указанному элементу\n                if (name_adr) {\n                    name_adr.map((item) => { // перебор массива имен записанных адресов в базу, для выплывающего спика\n                        if (e.target.textContent == item.name) {\n                            setData(item.name);\n                            onChange();\n                        }\n                    });\n                    if (e.target.textContent == prochie) {\n                        setData(prochie);\n                        onChange();\n                    }\n                }\n                if (e.target.textContent == years) {\n                    setTime(years);\n                    onChange();\n                    console.log(e.target.textContent);\n                }\n                if (e.target.textContent == month) {\n                    setTime(month);\n                    onChange();\n                }\n                if (e.target.textContent == all_time) {\n                    setTime(all_time);\n                    onChange();\n                }\n            } else if (e.target.textContent == all_adr) {\n                setData(all_adr);\n                onChange();\n            }\n            setUl(false); // функция скрытия всплывающей области\n        };\n        if(props.data_time){\n            setTime(props.data_time)\n        }\n    return (// если в модуль приходят значения адресов из базы\n\n        (name_adr ?\n\n            <ul className=\"faux-select\" >\n                <li\n                    onClick={() => { ul_list_on(); onChange() }} //событие клика с вызовом функций \n                    // изменение стилкй при нажатом элементе ->\n                    className={ul ? \"selected-option active\" : \"selected-option\"}>\n                    <div>\n                        <span\n                            style={{ paddingLeft: \"0.3vw\" }}\n                            id=\"operation\">{data}\n                        </span>\n                        <span className=\"openlist\">&#9660;</span>\n                    </div>\n                </li>\n                <ReactCSSTransitionGroup\n                    transitionName=\"fade\"\n                    transitionEnterTimeout={500}\n                    transitionLeaveTimeout={500}\n                    transitionAppear={true}\n                    transitionAppearTimeout={500}>\n                    {\n                        ul && (<div className=\" dropdown \">\n                            <li\n                                onClick={li_data}\n                                id=\"q8\">\n                                <span>{all_adr}</span>\n                            </li>\n                            {name_adr.map((item, index) => ( //перебор массива адресов для заполнения всплывающего окна\n                                index < 4 && ( // вывод первых не более 4х значений массива\n                                    <li\n                                        key={index + \"li\"}\n                                        onClick={li_data}\n                                        id={index + 2 + \"q\"}>\n                                        <span>{item.name}</span>\n                                    </li>\n                                )\n                            ))}\n                            <li\n                                onClick={li_data}\n                                id=\"q12\">\n                                <span>{prochie}</span>\n                            </li>\n                        </div>)\n                    }\n                </ReactCSSTransitionGroup>\n            </ul>\n            : // повторения операций только когда мы е получаем массив с адресами\n            <ul className=\"faux-select\" >\n                <li\n                    onClick={() => { ul_list_on() }}\n                    className=\" selected-option none \">\n                    <div>\n                        <span id=\"times\">{time}</span>\n                    </div>\n                </li>\n                <ReactCSSTransitionGroup\n                    transitionName=\"fade\"\n                    transitionEnterTimeout={500}\n                    transitionLeaveTimeout={500}\n                    transitionAppear={true}\n                    transitionAppearTimeout={500}>\n\n                    {\n                        ul && (<div className=\" dropdown \">\n                            <li\n                                onClick={li_data}\n                                id=\"qq8\">\n                                <span>{all_time}</span>\n                            </li>\n                            <li\n                                onClick={li_data}\n                                id=\"qq9\">\n                                <span>{years}</span>\n                            </li>\n                            <li\n                                onClick={li_data}\n                                id=\"qq10\">\n                                <span>{month}</span>\n                            </li>\n                        </div>)\n                    }\n                </ReactCSSTransitionGroup>\n            </ul>\n        )\n    )\n}\n\n\nexport default Selecting;\n","import React, { Component } from 'react';\nimport Contents from \"./contents\"\nimport \"./content.css\"\nimport Pagination from \"../Pagination/Pagination.jsx\"\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; // подключение модуля даты \nimport Infobar from \"../infobar/infobar.jsx\"\nimport Selecting from \"../select/select.jsx\"\n\nclass Content extends Component {\n    state = {\n        account: [],\n        name_adr: [],\n        product: [],\n        list_content: [],\n        select_oper: \"Все адреса\",\n        isActivyears: true,\n        detail: true,\n        data_time: \"за все время\",\n        years: \"за год\",\n        month: \"за месяц\",\n        date1: new Date(),\n        startDate: new Date(),\n        currentPage: 1,\n        postPerPage: 10,\n\n    };\n    // Кнопка сброса всех фильтров, параметры по умолчанию\n    sbros = () => {\n        this.setState({\n            list_content: this.state.account\n        });\n        document.querySelector(\"#times\").textContent = \"за все время\";\n        setTimeout(() => {\n            this.setState({\n                detail: false,\n                isActivyears: false,\n                select_oper: document.querySelector(\"#operation\").textContent = \"Все адреса\"\n            });\n        }, 100)\n        this.clickselect0();\n    }\n    // состояния разворота подробной информации о каждом заказе\n    detail_click() {\n        if (this.state.detail == false)\n            this.setState({\n                detail: true\n            })\n        else\n            this.setState({\n                detail: false\n            })\n    }\n    // Создание кликера открытия списка селект\n    clickselect0 = () => {\n        setTimeout(() => {\n            if (this.state.data_time != (document.querySelector(\"#times\").textContent)) {\n                this.setState({\n                    data_time: (document.querySelector(\"#times\").textContent),\n                    list_content: this.state.account,\n                    isActivyears: true\n                });\n                this.dop2();\n            } else {\n                this.setState({\n                    isActivyears: true\n                })\n            }\n        }, 100)\n    }\n    // Создание фильтрации по дате\n    clickselect1 = (date) => {\n        this.setState({\n            date1: date\n        });\n        if (this.state.date1) {\n            if (this.state.data_time == \"за год\") {\n                this.setState({\n                    list_content: this.state.list_content.filter((a) => this.state.date1.getFullYear() == (new Date(a.dates).getFullYear()))\n                })\n            }\n            if (this.state.data_time == \"за месяц\") {\n                this.setState({\n                    list_content: this.state.list_content.filter((a) => (this.state.date1.getMonth() + 1 == (new Date(a.dates).getDate()) && this.state.date1.getFullYear() == (new Date(a.dates).getFullYear())))\n                })\n            }\n            if (this.state.data_time != \"за год\" && this.state.data_time != \"за месяц\") {\n                this.setState({\n                    list_content: this.state.list_content\n                });\n\n            }\n            this.dop2();\n        }\n\n    }\n    // Создание дополнительного филтра по адресам и дате\n    dop2() {\n        setTimeout(() => {\n            this.setState({\n                select_oper: document.querySelector(\"#operation\").textContent\n            })\n            if (this.state.select_oper != \"Все адреса\" && this.state.select_oper != \"Прочие адреса\") {\n                this.setState({\n                    list_content: this.state.account.filter((a) => a.addr_account.name == this.state.select_oper)\n                });\n\n            } else if (this.state.select_oper == \"Прочие адреса\") {\n                this.state.name_adr.map((item, index) => {\n                    if (index > 4)\n                        this.setState({\n                            list_content: this.state.account.filter((a) => a.addr_account.name == item.name)\n                        })\n                });\n\n\n            } else if (this.state.select_oper == \"Все адреса\") {\n                this.setState({\n                    list_content: this.state.account\n                });\n\n            }\n            if (this.state.date1) {\n                if (this.state.data_time == \"за год\") {\n                    this.setState({\n                        list_content: this.state.list_content.filter((a) => this.state.date1.getFullYear() == (new Date(a.dates).getFullYear()))\n                    })\n\n                }\n                if (this.state.data_time == \"за месяц\") {\n                    this.setState({\n                        list_content: this.state.list_content.filter((a) => (this.state.date1.getMonth() + 1 == (new Date(a.dates).getDate()) && this.state.date1.getFullYear() == (new Date(a.dates).getFullYear())))\n                    })\n\n                }\n                if (this.state.data_time != \"за год\" && this.state.data_time != \"за месяц\") {\n                    this.setState({\n                        list_content: this.state.list_content\n                    });\n\n                }\n            }\n        }, 1)\n\n\n    }\n    // Повтор фильтра по адресам для избежания зацикливания\n    clickselect2 = () => {\n        setTimeout(() => {\n            this.setState({\n                select_oper: document.querySelector(\"#operation\").textContent\n            });\n            this.dop2();\n        }, 1)\n\n    }\n    // Элементы которые загружаются при первом запуске страницы\n    componentDidMount() {\n        //Fetch Загрузка массива данных о заказах\n        fetch(\"orders.json\")\n            .then((response) => response.json())\n            .then((response) => { this.setState({ account: response.orders }); console.log(\"Good job-1\"); })\n            .then((error) => { this.setState({ false: true, error }) })\n            .finally(() => { this.setState({ list_content: this.state.account }); this.clickselect2(); this.detail_click() });\n\n        fetch(\"address.json\")\n            .then((response) => response.json())\n            .then((response) => { this.setState({ name_adr: response.sort((a, b) => { return b.wt - a.wt }) }); console.log(\"Good job-2\"); })\n            .then((error) => { this.setState({ false: true, error }) });\n\n    }\n    // Запись состояния выбранной (текущей) страницы\n    paginete = (pageNumber) => {\n        this.setState({\n            currentPage: pageNumber\n        })\n    }\n    render() {\n        const IndexofLastPost = this.state.currentPage * this.state.postPerPage; // последний пост\n        const IndexofFirstPost = IndexofLastPost - this.state.postPerPage; // Первый пост\n        const currentPost = this.state.list_content.slice(IndexofFirstPost, IndexofLastPost) //Посты к выгрузке\n        return (\n            <>\n                <div className=\"header-content\">\n                    <span className=\"order\">Последние заказы</span>\n                    <span className=\"details\" onClick={() => this.detail_click()}>Все детали</span>\n                </div>\n                <div className=\"inner-header-content\">\n                    <div className=\"margin text\" >Отображать</div>\n                    <div style={{ marginRight: \"3vw\" }}>\n                        <div className=\"positionselect\" >\n                            <Selecting onChange={this.clickselect0} />\n                        </div>\n                        {\n                            <div style={{ marginTop: \"2rem\" }}>\n                                {this.state.isActivyears && (<>\n                                    {(this.state.data_time == \"за год\") &&\n                                        <DatePicker\n                                            selected={this.state.startDate}\n                                            onChange={date => {\n                                                this.setState({\n                                                    startDate: date\n                                                }); this.clickselect1(date);\n                                            }}\n                                            showYearPicker\n                                            dateFormat=\"yyyy\"\n                                            yearItemNumber={9}\n                                        />\n                                    }\n                                    {(this.state.data_time == \"за месяц\") &&\n                                        <DatePicker\n                                            selected={this.state.startDate}\n                                            onChange={date => {\n                                                this.setState({\n                                                    startDate: date\n                                                }); this.clickselect1(date);\n                                            }}\n                                            dateFormat=\"MMMM\"\n                                            showMonthYearPicker\n                                            showFullMonthYearPicker\n                                        />\n\n                                    } </>)}\n                            </div>\n                        }\n                    </div>\n                    <div className=\"text\">\n                        адрес доставки:\n                    </div>\n                    <div className=\"positionselect\">\n                        <Selecting name_adr={this.state.name_adr} onChange={this.clickselect2} />\n                    </div>\n\n                    <div className=\"sbros\" style={{ fontSize: \"1.2vw\" }} onClick={() => this.sbros()} >\n                        Сбросить\n                    </div>\n                </div>\n                <div className=\"inner-wrapper-content\">\n                    <div className=\"header-wrapper\">\n                        <div>\n                            Заказ\n                    </div>\n                        <div>\n                            Дата\n                    </div>\n                        <div>\n                            Приход\n                    </div>\n                        <div>\n                            Расход\n                    </div>\n                        <div>\n                            Адрес\n                    </div>\n\n                    </div>\n                    <div></div>\n                    <div>\n                        {(this.state.detail) && (\n                            <div>\n                                {currentPost.map(\n                                    (item, index) => {\n                                        return (\n                                            <Contents\n                                                detail={true}\n                                                key={index + \"jhjhjh\"}\n                                                order={item.order}\n                                                dates={item.dates}\n                                                coming_bonus={item.coming_bonus}\n                                                rate={item.rate}\n                                                data_account={item.data.data_account}\n                                                tel={item.data.tel}\n                                                dats={item.data.date_delivery.dats}\n                                                tims={item.data.date_delivery.tims}\n                                                rate_bonus={item.data.rate_bonus}\n                                                name={item.addr_account.name}\n                                                addr={item.addr_account.addr}\n                                                before={item.data.interval_delivery.before}\n                                                withs={item.data.interval_delivery.withs}\n                                                person_discount={item.data.person_discount}\n                                                discount_poll={item.data.discount_poll}\n                                                rate_delivery={item.data.rate_delivery}\n                                                summ_bonus={item.data.summ_bonus}\n                                                products_list={item.data.products_list}\n                                                payment_methods={item.data.payment_methods}\n                                                comment={item.data.comment}\n                                            />\n                                        )\n                                    }\n                                )\n                                }\n                                <div><Pagination totalPost={this.state.list_content.length} postPerPage={this.state.postPerPage} paginete={this.paginete} currentPage={this.state.currentPage} /></div>\n                            </div>\n                        )}\n                        {(!this.state.detail) && (\n                            <div>\n                                {currentPost.map(\n                                    (item, index) => {\n                                        return (\n                                            <Contents\n                                                detail={false}\n                                                key={index + \"jhjhsah\"}\n                                                order={item.order}\n                                                dates={item.dates}\n                                                coming_bonus={item.coming_bonus}\n                                                rate={item.rate}\n                                                data_account={item.data.data_account}\n                                                tel={item.data.tel}\n                                                dats={item.data.date_delivery.dats}\n                                                tims={item.data.date_delivery.tims}\n                                                rate_bonus={item.data.rate_bonus}\n                                                name={item.addr_account.name}\n                                                addr={item.addr_account.addr}\n                                                before={item.data.interval_delivery.before}\n                                                withs={item.data.interval_delivery.withs}\n                                                person_discount={item.data.person_discount}\n                                                discount_poll={item.data.discount_poll}\n                                                rate_delivery={item.data.rate_delivery}\n                                                summ_bonus={item.data.summ_bonus}\n                                                products_list={item.data.products_list}\n                                                payment_methods={item.data.payment_methods}\n                                                comment={item.data.comment}\n                                            />\n                                        )\n                                    }\n                                )\n                                }\n                                <div>\n                                    <Pagination totalPost={this.state.list_content.length} postPerPage={this.state.postPerPage} paginete={this.paginete} currentPage={this.state.currentPage} /></div>\n                            </div>\n\n                        )}\n\n                    </div>\n                    <Infobar />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Content;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport Content from \"./Component/content/content\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n      <Content />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}